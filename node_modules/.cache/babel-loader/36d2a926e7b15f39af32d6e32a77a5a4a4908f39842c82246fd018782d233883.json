{"ast":null,"code":"// src/axiosConfig.js\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nconst instance = axios.create({\n  baseURL: \"http://localhost:4000/\"\n});\n\n// Request interceptor to add the Authorization header\ninstance.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Response interceptor to handle 403 errors\ninstance.interceptors.response.use(response => response, error => {\n  if (error.response && error.response.status === 403) {\n    // Clear the token from localStorage\n    localStorage.removeItem(\"token\");\n    // Redirect to the login page\n    window.location.href = \"/login\";\n    // Alternatively, if using React Router's useNavigate:\n    // const navigate = useNavigate();\n    // navigate('/login');\n  }\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"names":["axios","useNavigate","instance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","status","removeItem","window","location","href","Promise","reject"],"sources":["/Users/chanchalnegi/Documents/adapt-ready-assignment/adapt-ready-frontend/src/axiosConfig.js"],"sourcesContent":["// src/axiosConfig.js\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst instance = axios.create({\n  baseURL: \"http://localhost:4000/\",\n});\n\n// Request interceptor to add the Authorization header\ninstance.interceptors.request.use((config) => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Response interceptor to handle 403 errors\ninstance.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response && error.response.status === 403) {\n      // Clear the token from localStorage\n      localStorage.removeItem(\"token\");\n      // Redirect to the login page\n      window.location.href = \"/login\";\n      // Alternatively, if using React Router's useNavigate:\n      // const navigate = useNavigate();\n      // navigate('/login');\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default instance;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC5BC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,QAAQ,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EAC5C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACAN,QAAQ,CAACG,YAAY,CAACS,QAAQ,CAACP,GAAG,CAC/BO,QAAQ,IAAKA,QAAQ,EACrBC,KAAK,IAAK;EACT,IAAIA,KAAK,CAACD,QAAQ,IAAIC,KAAK,CAACD,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;IACnD;IACAN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChC;IACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IAC/B;IACA;IACA;EACF;EACA,OAAOC,OAAO,CAACC,MAAM,CAACP,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeb,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}